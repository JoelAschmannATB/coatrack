name: Java CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build
        run: bash build.sh

  build_and_push_to_docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build
        run: bash build.sh
      - name: Push to docker
        run: cd docker && bash build-and-push-images.sh

  deploy_to_kubernetes:
    needs: build_and_push_to_docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set Kubernetes Context
        uses: deliverybot/helm@master
        with:
          token: ${{ github.token  }}
          chart: ${{ secrets.HELM_CHART }}
        env:
          KUBECONFIG_FILE: ${{ secrets.KUBE_CONGIF }}
#          method: kubeconfig
#          kubeconfig: ${{ secrets.KUBE_CONFIG }}
#          username: ${{ secrets.NEXUS_USER }}
#          password: ${{ secrets.NEXUS_PASSWORD }}
#          docker_support_image: ${{ secrets.HELM_PIPELINE_IMAGE }}
#          coatrack_admin_repo: coatrack/coatrack-admin
#          coatrack_config_server_repo: coatrack/coatrack-config-server
#          coatrack_image: 2.0.0-SNAPSHOT
#          helm_chart: ${{ secrets.HELM_CHART }}
#          helm_chart_version: ${{ secrets.HELM_CHART_VERSION }}
#      - name: docker login
#        run: echo $NEXUS_PASSWORD | docker login docker.bebr.nl -u $NEXUS_USERNAME --password-stdin
#      - name: helm update
#        run: |
#          helm upgrade --cleanup-on-fail --install coatrack bebr/generic-microservice -n coatrack --values environment-setup/dev/config_dev.yml
#          with:
#            method: kubeconfig
#            kubeconfig: ${{ secrets.KUBE_CONFIG }}
#            image: ${{ secrets.HELM_PIPELINE_IMAGE }}
#            username: ${{ secrets.NEXUS_USER }}
#            password: ${{ secrets.NEXUS_PASSWORD }}
#            helmchart: ${{ secrets.HELM_CHART }}
#      - name: Update configmap
#        run: |
#          kubectl --namespace=coatrack apply -f environment-setup/dev/config_dev.yml
#      - name: Update container image coatrack-admin
#        run: |
#          kubectl --namespace=coatrack set image deployment/coatrack-admin coatrack-admin-container=coatrack/coatrack-admin:2.0.0-SNAPSHOT
#      - name: Update container image coatrack-config-server
#        run: |
#          kubectl --namespace=coatrack set image deployment/coatrack-config-server coatrack-config-server-container=coatrack/coatrack-config-server:2.0.0-SNAPSHOT
#      - name: restart containers
#        run: |
#          kubectl --namespace=coatrack rollout restart deploy
