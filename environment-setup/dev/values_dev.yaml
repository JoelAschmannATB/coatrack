deployments:
  - name: coatrack-admin
    configMaps:
      - name: coatrack-config
    replicas: 1
      repository: coatrack/coatrack-admin
      tag: 2.0.0-SNAPSHOT
    ingress:
      hosts:
        - host: dev.coatrack.eu
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
          - dev.coatrack.eu
          secretName: coatrack-tls
    volumes:
      - name: gluster
        mountPath: /mnt/coatrack
        readOnly: false
        type: |-
          persistentVolumeClaim:
            claimName: coatrack-pvc
    imagePullSecrets:
      - name: docker-login
  - name: coatrack-config-server
    configMaps:
      - name: coatrack-config
    replicas: 1
      repository: coatrack/coatrack-config-server
      tag: 2.0.0-SNAPSHOT
    ingress:
      hosts:
        - host: config.dev.coatrack.eu
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
          - config.dev.coatrack.eu
          secretName: coatrack-config-server-tls
    volumes:
      - name: gluster
        mountPath: /mnt/coatrack
        readOnly: false
        type: |-
          persistentVolumeClaim:
            claimName: coatrack-pvc
    imagePullSecrets:
      - name: docker-login
configMaps:
  - name: coatrack-config
    values:
      spring.datasource.username: coatrack
      spring.datasource.password: coatrack123
      spring.datasource.dbname: coatrack_dev
      #spring.datasource.host: kyoe.es
      spring.datasource.host: "5.9.13.240"
      spring.datasource.port: "5432"
      spring.datasource.url: jdbc:postgresql://${spring.datasource.host}:${spring.datasource.port}/${spring.datasource.dbname}
      spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation: "true"
      spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
      logging.level: DEBUG
      logging.level.org: INFO
      logging.level.org.springframework: INFO
      org.springframework.security: INFO
      logging.level.eu.coatrack: DEBUG

      ygg.mail.sender.from: "coatrack@kyoe.es"
      ygg.mail.sender.user: "coatrack@kyoe.es" 
      ygg.mail.sender.password: "Pepe1234"
      ygg.mail.server.url: "smtp.serviciodecorreo.es"
      ygg.mail.server.port: "465"
      ygg.mail.verification.server.url: "https://dev.coatrack.eu"
      ygg.admin.payment.commision.variable: "50"
      ygg.admin.payment.commision.fix: "1"
      ygg.admin.payment.commision.bookKeeping.contact: fperezduran@bebr.nl
      ygg.admin.api-base-url-for-gateway: "https://dev.coatrack.eu/api/"
      # **** Doubts about possible duplication
      ygg.admin.api-base-url: "https://dev.coatrack.eu/api/"
      ygg.admin.server.url: "https://dev.coatrack.eu"
      ygg.admin.database.insertSampleDataOnStartup: "false"
  
      # ****
      # Test service id for the tutorial
      # ****
      ygg.admin.gettingStarted.consumer.testService.id: "108"
      ygg.admin.gettingStarted.consumer.testService.provider.username: "perezdf"
      ygg.admin.gettingStarted.consumer.testService.uriIdentifier: "raincoat-service"

      # ****
      # Git Service
      # ****
      ygg.admin.gitService.url: https://bitbucket.org/perezdf/anthill-settings.git
      ygg.admin.gitService.user: fpd.judo@gmail.com
      ygg.admin.gitService.password: "fpdvip1234"
      ygg.admin.servicecovers.path: "/tmp"

      # ****
      # Proxy
      # ****
      ygg.proxy.executable-jar.path: /mnt/coatrack
      ygg.proxy.executable-jar.filename-original-prefix: coatrack-proxy-
      ygg.proxy.executable-jar.filename-custom.prefix: coatrack-gateway-
      ygg.proxy.executable-jar.filename-custom.suffix: ".jar"
      ygg.proxy.executable-jar.template.url: "https://www.kyoe.es/proxies/coatrack-proxy-"
      ygg.proxy.executable-jar.generated.path: "/tmp"
      ygg.proxy.generate-bootstrap-properties.spring.application.name.prefix: ygg-proxy-
      ygg.proxy.generate-bootstrap-properties.spring.cloud.config.uri: https://config.dev.coatrack.eu

      # ****
      # Cloud
      # ****
      spring.cloud.config.uri: http://coatrack-config-server
      spring.cloud.config.username: admin
      spring.cloud.config.password: password
  
      # ****
      # Session
      # ****
      spring.session.store-type: jdbc
      spring.session.jdbc.initialize-schema: never
      spring.session.jdbc.schema: org/springframework/session/jdbc/schema-postgresql.sql
      spring.jpa.hibernate.ddl-auto: update
 
      # ****
      # Security
      # ****
      security.oauth2.client.registration.clientId: 21a84668d01527c4b788
      security.oauth2.client.registration.clientSecret: ca1bc92395c491245e3a1f50c84d31d6e1b2f908
      security.oauth2.client.registration.redirectUri: http://dev.coatrack.eu/login/oath2/code/github
      security.oauth2.client.registration.authenticationScheme: header
      security.oauth2.client.registration.clientAuthenticationScheme: header
      security.oauth2.client.registration.scope.user: email
      security.oauth2.client.registration.scope.read: user
      security.oauth2.client.provider.github.userNameAttribute: login
      security.oauth2.client.provider.resource.userInfoUri: https://api.github.com/user

      spring.profiles.active: dev

